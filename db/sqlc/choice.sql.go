// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: choice.sql

package db

import (
	"context"
)

const addNewRpsChoice = `-- name: AddNewRpsChoice :one
INSERT INTO choice (player_id, rps_choice)
VALUES ($1, $2) RETURNING id, player_id, rps_choice
`

type AddNewRpsChoiceParams struct {
	PlayerID  int64 `json:"player_id"`
	RpsChoice int32 `json:"rps_choice"`
}

func (q *Queries) AddNewRpsChoice(ctx context.Context, arg AddNewRpsChoiceParams) (Choice, error) {
	row := q.db.QueryRowContext(ctx, addNewRpsChoice, arg.PlayerID, arg.RpsChoice)
	var i Choice
	err := row.Scan(&i.ID, &i.PlayerID, &i.RpsChoice)
	return i, err
}

const getPlayerChoice = `-- name: GetPlayerChoice :one
SELECT rps_choice
FROM choice
WHERE player_id = $1
LIMIT 1
`

func (q *Queries) GetPlayerChoice(ctx context.Context, playerID int64) (int32, error) {
	row := q.db.QueryRowContext(ctx, getPlayerChoice, playerID)
	var rps_choice int32
	err := row.Scan(&rps_choice)
	return rps_choice, err
}
